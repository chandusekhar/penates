@model Penates.Interfaces.Models.ITableViewModel

<html>
<head>
    <script src="~/Scripts/DataTables/jquery.dataTables.min.js"></script>
    <link href="~/Content/DataTables/css/jquery.dataTablesWToolbar.min.css" rel="stylesheet" />
    <link href="~/Content/DT_bootstrap.css" rel="stylesheet" />
    <script src="~/Scripts/DataTables/plugins/dataTables.fnSetFilteringDelay.js"></script>
    <script src="~/Scripts/DataTables/plugins/dataTables.bootstrapPagination.js"></script>
    <script src="~/Scripts/DataTables/plugins/dataTables.fnReloadAjax.js"></script>
    <script src="~/Scripts/DataTables/aoDataManagment.js"></script>
    <script src="~/Scripts/DataTables/dataTables.tableTools.min.js"></script>
    <link href="~/Content/DataTables/css/dataTables.tableTools.min.css" rel="stylesheet" />
    <style>
        .table-responsive.foo {
            overflow-x: visible !important;
            overflow-y: visible !important;
        }
    </style>
    <script>
        eval("var "+'@Model.concatWithID("editTable")');
        $(document).ready(function(){
            if (typeof @Model.concatWithID("editTable") == 'undefined' || !$.isFunction(@Model.concatWithID("editTable"))) {
                @Model.concatWithID("editTable") = function (id) {
                    var param = {
                        UserID: id
                    };
                    window['@Model.JQueryEditFunction'](param);
                }
            }
        });
    </script>
    <script title="Delete Product Function">
        eval("var delete"+'@Model.tableID');
        @Model.concatWithID("delete") = function(id){
            if (confirm('@Model.DeleteConfirmMessage')) {
                $("#divProcessing").show();
                var del = @Html.Raw(Json.Encode(Model.Params));
                if(del == null){
                    del = {};
                }
                del["UserID"] = id;
                $.ajax({
                    url: '@Url.Action(@Model.DeleteAction, @Model.DeleteController)',
                    data: del,
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        $("#divProcessing").hide();
                        alert(data.title + ": \"" + data.message + "\"");
                        window['@Model.RefreshFunction']();
                    },
                    error: function (xhr) {
                        $("#divProcessing").hide();
                        var er = xhr.status;
                        er = er + " - " + xhr.statusText;
                        er = er + ": \"" + xhr.responseText + "\"";
                        alert(er);
                    }
                })
            }
        }
    </script>
    <script title="Activate Function">
    eval("var activate"+'@Model.tableID');
    @Model.concatWithID("activate") = function(id, isActive){
        var message;
        if(isActive==null || isActive == false){
            message = '@String.Format(Resources.Messages.SureToDeactivate, Resources.Resources.UserWArt)';
        }else{
            message = '@String.Format(Resources.Messages.SureToActivate, Resources.Resources.UserWArt)';
        }
        if (confirm(message)) {
            $("#divProcessing").show();
            var del = @Html.Raw(Json.Encode(Model.Params));
            if(del == null){
                del = {};
            }
            del["UserID"] = id;
            $.ajax({
                url: '@Url.Action("Activate", "User")',
                data: del,
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    $("#divProcessing").hide();
                    alert(data.title + ": \"" + data.message + "\"");
                    window['@Model.RefreshFunction']();
                },
                error: function (xhr) {
                    $("#divProcessing").hide();
                    var er = xhr.status;
                    er = er + " - " + xhr.statusText;
                    er = er + ": \"" + xhr.responseText + "\"";
                    alert(er);
                }
            })
        }
    }
</script>

    <script>
    //Obtengo si proceso en el servidor o de forma local
    function getServerProcessing() {
        var compare = "@Model.ServerProcessing"
        if (compare == "False" || compare == "false") {
            return false;
        }
        return true;
    }
    eval("var "+'@Model.RefreshFunction');

    $(document).ready(function () {
        var id = "#"+'@Model.tableID';
        eval("var "+'@Model.tableID');
        @Model.tableID = $(id).dataTable({
            "bServerSide": getServerProcessing(),
            "sAjaxSource": '@Model.AjaxRequest',
            // Server Parameters
            "fnServerParams": function (aoData) {
                try {
                    try{
                        addGlobalParameters(aoData, globalParams.array);
                    }catch(err){
                        console.log("No hay parametros globales");
                    }
                    var p = @Html.Raw(Json.Encode(Model.Params));
                    if(p != null){
                        var nam = '';
                        for (var i in p) {
                            nam = i;
                            aoData.push({ name: i, value: p[i] });
                        }
                    }
                } catch (err) {
                    console.log(err);
                }
            },
            "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                oSettings.jqXHR = $.ajax({
                    "dataType": 'json',
                    "type": "GET",
                    "url": sSource,
                    "data": aoData,
                    "success": fnCallback,
                    "error": function (xhr, textStatus, error) {
                        $("body").html(xhr.responseText);
                    }
                })
            },
            "bProcessing": true,
            "aLengthMenu": [[10, 20, 30, 50], [10, 20, 30, 50]],
            "sPaginationType": "bootstrap",
            "autoWidth": true,
            //"sScrollX": "100%",
            //"bScrollCollapse": true,
            dom: 'lTfrtip',
            tableTools: {
                "sSwfPath": "@Url.Content("~/Content/DataTables/swf/copy_csv_xls_pdf.swf")",
                sRowSelect: "multi",
                //sRowSelector: 'td:first-child',
                aButtons:     [
                    {
                        "sExtends":    "text",
                        "sButtonText": "@Resources.FormsResources.Delete",
                        "fnClick": function ( nButton, oConfig, oFlash ) {
                            if (confirm('@Model.DeleteConfirmMessage')) {
                                var oTT = TableTools.fnGetInstance( '@Model.tableID' );
                                var aSelectedTrs = oTT.fnGetSelected();
                                var deacID = {};
                                var i = 0;
                                var ids = [];
                                $.each(aSelectedTrs, function(i, value){
                                    var element = $(this).contents().first().children();
                                    var id = element[0].id;
                                    $("#divProcessing").show();
                                    ids[i] = id;
                                    i = i+1;
                                });
                                deacID["UserIDs"] = ids;
                                $.ajax({
                                    url: '@Url.Action("BulkDeactivate", "ValueSecurity")',
                                    data: deacID,
                                    dataType: 'json',
                                    type: 'POST',
                                    success: function (data) {
                                        $("#divProcessing").hide();
                                        alert(data.title + ": \"" + data.message + "\"");
                                        window['@Model.RefreshFunction']();
                                    },
                                    error: function (xhr) {
                                        $("#divProcessing").hide();
                                        var er = xhr.status;
                                        er = er + " - " + xhr.statusText;
                                        er = er + ":\n\"" + xhr.responseText + "\"";
                                        alert(er);
                                    }
                                })
                            }
                        }
                        },
                    {"sExtends":'select_all',
                        "sButtonText": "@Resources.DataTables.SelectAll"},
                {"sExtends":'select_none',
                    "sButtonText": "@Resources.DataTables.DeselectAll"}]
            },
            "aoColumns": [
                            {
                                "sName": "FileNumber",
                                "mData": "FileNumber",
                                "bSearchable": false,
                                "bSortable": true,
                                "mRender": function (ID, log, obj) {
                                    // Armo el Html del boton con opciones
                                    var a = "<div id=\""+obj.UserID+"\" class=\"btn-toolbar bs-component\" style=\"margin: 0;\">\n";
                                    a = a + "<div class=\"btn-group\">\n";
                                    a = a + "<button type=\"button\" style=\"padding-right: 5px; padding-left: 5px;\" class=\"btn btn-default btn-xs dropdown-toggle\" data-toggle=\"dropdown\">" + obj.FileNumber + "<span class=\"caret\"></span></button>\n";
                                    a = a + "<ul class=\"dropdown-menu stay-open pull-left\" role=\"menu\">\n";
                                    var useJqueryEdit = '@Model.useJQueryEditFunction';
                                    var link;
                                    if(useJqueryEdit.toLowerCase() == 'false'){
                                        if('@Model.EditController' == '' || '@Model.EditController' == 'null'){
                                            link = '@Html.ActionLink(@Resources.FormsResources.Edit, "FormEdit", "ValueSecurity", new { UserID = -1 }, null)';
                                        }else{
                                            link = '@Html.ActionLink(@Resources.FormsResources.Edit, Model.EditAction, Model.EditController, new { UserID = -1 }, null)';
                                        }
                                    }else{
                                        link = "<a style=\"cursor: pointer\" class = \"table-edit-action\", onclick = \"-2('-1')\" >" + '@Resources.FormsResources.Edit' + "</a>";
                                        link = link.replace(-2, '@Model.concatWithID("editTable")'); //Reemplazo los objetos que tomo de MVC
                                        link = link.replace("-2", '@Model.concatWithID("editTable")'); //Reemplazo los objetos que tomo de MVC
                                    }
                                    link = link.replace(-1, obj.FileNumber);
                                    link = link.replace("-1", obj.FileNumber); //Reemplazo los objetos que tomo de MVC
                                    a = a + "<li>" + link + "</li>\n";
                                    a = a + "<li class=\"divider\"></li>\n";
                                    link = "<a style=\"cursor: pointer\" class = \"table-delete-action\", onclick = \"-2('-1')\" >" + '@Model.DeleteText' + "</a>";
                                    link = link.replace(-1, obj.FileNumber); //Reemplazo los objetos que tomo de MVC
                                    link = link.replace("-1", obj.FileNumber); //Reemplazo los objetos que tomo de MVC
                                    link = link.replace(-2, '@Model.concatWithID("delete")'); //Reemplazo los objetos que tomo de MVC
                                    link = link.replace("-2", '@Model.concatWithID("delete")'); //Reemplazo los objetos que tomo de MVC
                                    a = a + "<li>" + link + "</li>\n";
                                    a = a + "</ul>\n";
                                    a = a + "</div>\n";
                                    a = a + "</div>";
                                    return a;
                                }
                            },
                            { "sName": "Username", "mData": "Username"},
                            { "sName": "MaxProductPrice", "mData": "MaxProductPrice", "sClass": "dt-right"},
                            { "sName": "MinProductPrice", "mData": "MinProductPrice", "sClass": "dt-right"},
                            { "sName": "MaxOrderTotal", "mData": "MaxOrderTotal", "sClass": "dt-right"},
                            { "sName": "MinOrderTotal", "mData": "MinOrderTotal", "sClass": "dt-right"}
            ]
        }).fnSetFilteringDelay();

        @Model.RefreshFunction = function () {
            if (getServerProcessing()) {
                eval('@Model.tableID'+".fnDraw()");
            } else {
                eval('@Model.tableID'+".fnReloadAjax()")
            }
        }
    });
</script>
</head>
<body>
    <div class="row">
        <!--<button id="activateAll">Activate</button>-->
        <div id="divProcessing" class="row text-center" hidden="hidden">
            <p>@Resources.Resources.Processing<img src="../../Content/images/ajax-loader.gif"></p>
        </div>
        <table id="@Model.tableID" class="display">
            <!--class="table table-striped table-hover ">-->
            <thead>
                <tr>
                    <th>@Penates.App_GlobalResources.Forms.ModelFormsResources.FileNumber</th>
                    <th>@Penates.App_GlobalResources.Forms.ModelFormsResources.Username</th>
                    <th>@Penates.App_GlobalResources.Forms.ModelFormsResources.MaxProductPrice ($)</th>
                    <th>@Penates.App_GlobalResources.Forms.ModelFormsResources.MinProductPrice ($)</th>
                    <th>@Penates.App_GlobalResources.Forms.ModelFormsResources.MaxOrderTotal ($)</th>
                    <th>@Penates.App_GlobalResources.Forms.ModelFormsResources.MinOrderTotal ($)</th>
                </tr>
            </thead>
            <tbody></tbody>
            <tfoot>
                <tr>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>
            </tfoot>
        </table>
    </div>
</body>
</html>