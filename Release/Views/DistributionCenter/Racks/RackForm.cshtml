@model Penates.Models.ViewModels.DC.RackViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!doctype html>
<html>
<head>
    <title>@Html.Resource("Title")</title>
    <meta charset="utf-8">
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-background.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-extension.css" rel="stylesheet" />
    <link href="~/Content/css/select2.css" rel="stylesheet" />
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/Content/themes/base/jquery-ui-extension.css" rel="stylesheet" />
    <script src="~/Scripts/select2.min.js"></script>
    <script type="text/javascript" src="../../../Scripts/ABMs/calculateSizes.js"></script>
    <script src="~/Scripts/ABMs/calculateCapacity.js"></script>
    <script src="~/Scripts/Plugins/autocomplete.js"></script>
    <script src="~/Scripts/Plugins/autocompleteMultiple.js"></script>
    <script src="~/Scripts/Plugins/globalParams.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#Delete').click(function () {
                if (confirm('@String.Format(Resources.Messages.SureToDelete, Resources.Resources.Rack, Model.RackID)')) {
                    window.location.href = $(this).data('url');
                }
            });
        });
    </script>

    <script type="text/javascript" title="Initialize">
        var globalParams = new ParametrosGlobales;
    </script>

    <script type="text/javascript" title="Save Form Data">
        $(document).ready(function () {
            $(window).on('beforeunload', function () {
                sessionStorage.setItem('DistributionCenter', $('#DistributionCenter').val());
                sessionStorage.setItem('DepositID', $('#DepositID').val());
                sessionStorage.setItem('DepositName', $('#DepositName').val());
                sessionStorage.setItem('SectorID', $('#SectorID').val());
                sessionStorage.setItem('SectorName', $('#SectorName').val());
                sessionStorage.setItem('HallID', $('#HallID').val());
                sessionStorage.setItem('HallName', $('#HallName').val());
                sessionStorage.setItem('Description', $('#Description').val());
                sessionStorage.setItem('RackCode', $('#RackCode').val());
                sessionStorage.setItem('ShelfsNumber', $('#ShelfsNumber').val());
                sessionStorage.setItem('ShelfHeight', $('#ShelfHeight').val());
                sessionStorage.setItem('DivitionsNumber', $('#DivitionsNumber').val());
                sessionStorage.setItem('DivitionWidth', $('#DivitionWidth').val());
                sessionStorage.setItem('Depth', $('#Depth').val());
                sessionStorage.setItem('Height', $('#Height').val());
                sessionStorage.setItem('Width', $('#Width').val());
                sessionStorage.setItem('Size', $('#Size').val());
                sessionStorage.setItem('UsedSpacePercentage', $('#UsedSpacePercentage').val());
                sessionStorage.setItem('UsedPercentage', $('#UsedPercentage').val());
            });
        });
    </script>



    <script type="text/javascript" title="Load Form Data">
        $(document).ready(function () {
            var aux = sessionStorage.getItem('DistributionCenter');
            if (aux != null && aux != ""){
                $('#DistributionCenter').val(aux);
                globalParams.addParam("DistributionCenterID", aux);
            }
            aux = sessionStorage.getItem('DepositID');
            var aux2 = sessionStorage.getItem('DepositName');
            if (aux != null && aux != "" && aux2 != null && aux2 != ""){
                $('#DepositID').val(aux);
                globalParams.addParam("DepositID", aux);
                $('#DepositName').val(aux2);
            }
            aux = sessionStorage.getItem('SectorID');
            var aux2 = sessionStorage.getItem('SectorName');
            if (aux != null && aux != "" && aux2 != null && aux2 != ""){
                $('#SectorID').val(aux);
                globalParams.addParam("SectorID", aux);
                $('#SectorName').val(aux2);
            }
            aux = sessionStorage.getItem('HallID');
            var aux2 = sessionStorage.getItem('HallName');
            if (aux != null && aux != "" && aux2 != null && aux2 != ""){
                $('#HallID').val(aux);
                $('#HallName').val(aux2);
            }
            aux = sessionStorage.getItem('Description');
            if (aux != null && aux != "") $('#Description').val(aux);
            aux = sessionStorage.getItem('RackCode');
            if (aux != null && aux != "") $('#RackCode').val(aux);
            aux = sessionStorage.getItem('ShelfsNumber');
            if (aux != null && aux != "") $('#ShelfsNumber').val(aux);
            aux = sessionStorage.getItem('ShelfHeight');
            if (aux != null && aux != "") $('#ShelfHeight').val(aux);
            aux = sessionStorage.getItem('DivitionsNumber');
            if (aux != null && aux != "") $('#DivitionsNumber').val(aux);
            aux = sessionStorage.getItem('DivitionWidth');
            if (aux != null && aux != "") $('#DivitionWidth').val(aux);
            var dep = sessionStorage.getItem('Depth');
            if (dep != null && dep != "") $('#Depth').val(dep);
            var heigh = sessionStorage.getItem('Height');
            if (heigh != null && heigh != "") $('#Height').val(heigh);
            var wid = sessionStorage.getItem('Width');
            if (wid != null && wid != "") $('#Width').val(wid);
            calculateSizeByID();
            aux = dep * wid * heigh;
            if (aux != null && aux != "") $('#Capacity').val(aux);
            if (aux != null && aux != "") $('#UsedSpacePercentage').val(aux);
            if (aux != null && aux != "") $('#UsedPercentage').val(aux);
        });
    </script>
    <script type="text/javascript" title="Capacity Update">
        $(document).ready(function () {
            $("#Width").change(function (e) {
                var dcID = @Html.Raw(Json.Encode(Model.SectorID));
                if(dcID == null || dcID == 0){
                    calculateCapacity(null);
                }else{
                    calculateCapacity("@Resources.Errors.NewSpaceTooSmall");
                }
            });
            $("#Height").change(function (e) {
                var dcID = @Html.Raw(Json.Encode(Model.SectorID));
                if(dcID == null || dcID == 0){
                    calculateCapacity(null);
                }else{
                    calculateCapacity("@Resources.Errors.NewSpaceTooSmall");
                }
            });
            $("#Depth").change(function (e) {
                var dcID = @Html.Raw(Json.Encode(Model.SectorID));
                if(dcID == null || dcID == 0){
                    calculateCapacity(null);
                }else{
                    calculateCapacity("@Resources.Errors.NewSpaceTooSmall");
                }
            });
        });
    </script>
    <script type="text/javascript" title="Autocomplete">
        $(document).ready(function () {
            $("#DistributionCenter").autocompletar({
                url: '@Url.Action("DistributionCenterAutocomplete", "DepositsABM")',
                seleccion: function (event, ui) {
                    $('#DistributionCenter').val(ui.item.id);
                    globalParams.addParam("DistributionCenterID", ui.item.id);
                    sessionStorage.setItem("DistributionCenter",ui.item.id);
                    $('#SectorName').val("");
                    $('#SectorID').val("");
                    $('#DepositName').val("");
                    $('#DepositID').val("");
                    $('#HallName').val("");
                    $('#HallID').val("");
                    sessionStorage.setItem("DepositID", "");
                    sessionStorage.setItem("DepositName", "");
                    sessionStorage.setItem("SectorID", "");
                    sessionStorage.setItem("SectorName", "");
                    sessionStorage.setItem("HallID", "");
                    sessionStorage.setItem("HallName", "");
                    globalParams.deleteParam("DepositID");
                    globalParams.deleteParam("SectorID");
                    globalParams.deleteParam("HallID");
                    return false;
                },
                keyup: function (event, ui) {
                    var valor = $("#DistributionCenter").val();
                    if (valor == null || valor == "") {
                        sessionStorage.setItem("DistributionCenter", "");
                        $("#DepositID").val("");
                        $("#DepositName").val("");
                        $("#SectorID").val("");
                        $("#SectorName").val("");
                        $("#HallID").val("");
                        $("#HallName").val("");
                        sessionStorage.setItem("DepositID", "");
                        sessionStorage.setItem("DepositName", "");
                        sessionStorage.setItem("SectorID", "");
                        sessionStorage.setItem("SectorName", "");
                        sessionStorage.setItem("HallID", "");
                        sessionStorage.setItem("HallName", "");
                        globalParams.deleteParam("DistributionCenterID");
                        globalParams.deleteParam("DepositID");
                        globalParams.deleteParam("SectorID");
                        globalParams.deleteParam("HallID");
                    }
                }
            });
        });
    </script>

    <script type="text/javascript" title="Deposit Autocomplete">
        $(document).ready(function () {
            $("#DepositName").autocompletar({
                url: '@Url.Action("Autocomplete", "DepositsABM")',
                params: globalParams.array,
                seleccion: function (event, ui) {
                    $('#DepositName').val(ui.item.label);
                    $('#DepositID').val(ui.item.id);
                    $('#SectorName').val("");
                    $('#SectorID').val("");
                    $('#HallName').val("");
                    $('#HallID').val("");
                    globalParams.addParam("DepositID", ui.item.id);
                    sessionStorage.setItem("DepositID",ui.item.id);
                    sessionStorage.setItem("DepositName",ui.item.label);
                    sessionStorage.setItem("SectorID", "");
                    sessionStorage.setItem("SectorName", "");
                    sessionStorage.setItem("HallID", "");
                    sessionStorage.setItem("HallName", "");
                    globalParams.deleteParam("SectorID");
                    globalParams.deleteParam("HallID");
                    if(ui.item.aux != undefined && ui.item.aux != null && ui.item.aux.DistributionCenterID != null && ui.item.aux.DistributionCenterID != ""){
                        $('#DistributionCenter').val(ui.item.aux.DistributionCenterID);
                        sessionStorage.setItem("DistributionCenter",ui.item.aux.DistributionCenterID);
                        globalParams.addParam("DistributionCenterID", ui.item.aux.DistributionCenterID);
                    }
                    return false;
                },
                keyup: function (event, ui) {
                    var valor = $("#DepositName").val();
                    if (valor == null || valor == "") {
                        $("#DepositID").val("");
                        $("#SectorID").val("");
                        $("#SectorName").val("");
                        $("#HallID").val("");
                        $("#HallName").val("");
                        globalParams.deleteParam("DepositID");
                        globalParams.deleteParam("SectorID");
                        globalParams.deleteParam("HallID");
                        sessionStorage.setItem("DepositID", "");
                        sessionStorage.setItem("DepositName", "");
                        sessionStorage.setItem("SectorID", "");
                        sessionStorage.setItem("SectorName", "");
                        sessionStorage.setItem("HallID", "");
                        sessionStorage.setItem("HallName", "");
                    }
                }
            });
        });
    </script>

    <script type="text/javascript" title="Sector Autocomplete">
        $(document).ready(function () {
            $("#SectorName").autocompletar({
                url: '@Url.Action("Autocomplete", "SectorsABM")',
                params: globalParams.array,
                seleccion: function (event, ui) {
                    $('#SectorName').val(ui.item.label);
                    $('#SectorID').val(ui.item.id);
                    $('#HallName').val("");
                    $('#HallID').val("");
                    globalParams.addParam("SectorID", ui.item.id);
                    sessionStorage.setItem("SectorID",ui.item.id);
                    sessionStorage.setItem("SectorName",ui.item.label);
                    sessionStorage.setItem("HallID", "");
                    sessionStorage.setItem("HallName", "");
                    globalParams.deleteParam("HallID");
                    if(ui.item.aux != undefined && ui.item.aux != null){
                        if(ui.item.aux.DistributionCenterID != null && ui.item.aux.DistributionCenterID != ""){
                            $('#DistributionCenter').val(ui.item.aux.DistributionCenterID);
                            sessionStorage.setItem("DistributionCenter",ui.item.aux.DistributionCenterID);
                            globalParams.addParam("DistributionCenterID", ui.item.aux.DistributionCenterID);
                        }
                        if(ui.item.aux.DepositID != null && ui.item.aux.DepositID != ""){
                            $('#DepositID').val(ui.item.aux.DepositID);
                            $('#DepositName').val(ui.item.aux.DepositName);
                            sessionStorage.setItem("DepositID",ui.item.aux.DepositID);
                            sessionStorage.setItem("DepositName",ui.item.aux.DepositName);
                            globalParams.addParam("DepositID", ui.item.aux.DepositID);
                        }
                    }
                    return false;
                },
                keyup: function (event, ui) {
                    var valor = $("#SectorName").val();
                    if (valor == null || valor == "") {
                        $("#SectorID").val("");
                        sessionStorage.setItem("SectorID", "");
                        sessionStorage.setItem("SectorName", "");
                        $("#HallID").val("");
                        $("#HallName").val("");
                        globalParams.deleteParam("HallID");
                        sessionStorage.setItem("HallID", "");
                        sessionStorage.setItem("HallName", "");
                    }
                }
            });
        });
    </script>

    <script type="text/javascript" title="Hall Autocomplete">
        $(document).ready(function () {
            $("#HallName").autocompletar({
                url: '@Url.Action("Autocomplete", "HallsABM")',
                params: globalParams.array,
                seleccion: function (event, ui) {
                    $('#HallName').val(ui.item.label);
                    $('#HallID').val(ui.item.id);
                    sessionStorage.setItem("HallID",ui.item.id);
                    sessionStorage.setItem("HallName",ui.item.label);
                    if(ui.item.aux != undefined && ui.item.aux != null){
                        if(ui.item.aux.DistributionCenterID != null && ui.item.aux.DistributionCenterID != ""){
                            $('#DistributionCenter').val(ui.item.aux.DistributionCenterID);
                            sessionStorage.setItem("DistributionCenter",ui.item.aux.DistributionCenterID);
                            globalParams.addParam("DistributionCenterID", ui.item.aux.DistributionCenterID);
                        }
                        if(ui.item.aux.DepositID != null && ui.item.aux.DepositID != ""){
                            $('#DepositID').val(ui.item.aux.DepositID);
                            $('#DepositName').val(ui.item.aux.DepositName);
                            sessionStorage.setItem("DepositID",ui.item.aux.DepositID);
                            sessionStorage.setItem("DepositName",ui.item.aux.DepositName);
                            globalParams.addParam("DepositID", ui.item.aux.DepositID);
                        }
                        if(ui.item.aux.SectorID != null && ui.item.aux.SectorID != ""){
                            $('#SectorID').val(ui.item.aux.SectorID);
                            $('#SectorName').val(ui.item.aux.SectorName);
                            sessionStorage.setItem("SectorID",ui.item.aux.SectorID);
                            sessionStorage.setItem("SectorName",ui.item.aux.SectorName);
                            globalParams.addParam("SectorID", ui.item.aux.SectorID);
                        }
                    }
                    return false;
                },
                keyup: function (event, ui) {
                    var valor = $("#HallName").val();
                    if (valor == null || valor == "") {
                        $("#HallID").val("");
                        $("#HallName").val("");
                        sessionStorage.setItem("HallID", "");
                        sessionStorage.setItem("HallName", "");
                    }
                }
            });
        });
    </script>

    <script type="text/javascript" title="AutocompleteMultiple">
        $(document).ready(function () {
            $("#Categories").autocompletarMultiple({
                url: '@Url.Action("CategoryAutocomplete", "RacksForms")',
                initSelection: function(element, callback){
                    var data = @Html.Raw(Json.Encode(Model.initialCategories));
                    callback(data);
                },
                paramsFunc: function(){
                    var data = {};
                    var aux = globalParams.getParam("HallID");
                    if(aux != null){
                        data["HallID"] = aux;
                    }
                    return data;
                }
            });
        });
    </script>

    <script type="text/javascript" title="calculate">
        function calculateShelfHeight(){
            var height = $("#Height").val();
            var shelves = $("#ShelfsNumber").val();
            if(height == null || shelves == null || height == "" || shelves == ""){
                $("#ShelfHeight").val("");
            }else{
                var x = height/shelves;
                x = Math.round(x * 100) / 100;
                $("#ShelfHeight").val(x);
            }
        }

        function calculateDivitionWidth(){
            var width = $("#Width").val();
            var divitions = $("#DivitionsNumber").val();
            if(width == null || divitions == null || width == "" || divitions == ""){
                $("#DivitionWidth").val("");
            }else{
                var x = width/divitions;
                x = Math.round(x * 100) / 100;
                $("#DivitionWidth").val(x);
            }
        }
    </script>

</head>

<body>
    <div class="container">
        <h2>@Html.Resource("Title")</h2>
        <form class="form-horizontal" id="rack-form" name="rack-form" action="@Url.Action("Save","RacksForms")" autocomplete="on" method="post" enctype="multipart/form-data">
            @Html.ValidationMessageFor(m => m.error)
            @Html.AntiForgeryToken()
            <fieldset>
                <legend></legend>
                @if (@Model.RackID != null && @Model.RackID != 0) {
                    <div class="form-group">
                        <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.RackID):</label>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(m => m.RackID, new { disabled = "disabled", @class = "form-control" })
                            <div class="form-group" hidden>
                                @Html.TextBoxFor(m => m.RackID, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(m => m.RackID)
                        </div>
                    </div>
                }
                <div class="form-group">
                    <label class="col-lg-2 control-label">* @Html.DisplayNameFor(m => m.RackCode):</label>
                    <div class="col-lg-4">
                        @Html.TextBoxFor(m => m.RackCode, new { @class = "form-control", required = "required", autofocus = "autofocus" })
                        @Html.ValidationMessageFor(m => m.RackCode)
                    </div>
                    <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.Description):</label>
                    <div class="col-lg-4">
                        @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Description)
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.DistributionCenter):</label>
                    <div class="col-lg-4">
                        @Html.TextBoxFor(m => m.DistributionCenter, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.DistributionCenter)
                    </div>
                    <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.DepositName):</label>
                    <div class="col-lg-4">
                        @Html.TextBoxFor(m => m.DepositName, new { @class = "form-control" })
                        <div class="form-group" hidden>
                            @Html.TextBoxFor(m => m.DepositID, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.SectorName):</label>
                    <div class="col-lg-4">
                        @Html.TextBoxFor(m => m.SectorName, new { @class = "form-control" })
                        <div class="form-group" hidden>
                            @Html.TextBoxFor(m => m.SectorID, new { @class = "form-control" })
                        </div>
                    </div>
                    <label class="col-lg-2 control-label">* @Html.DisplayNameFor(m => m.HallName):</label>
                    <div class="col-lg-4">
                        @Html.TextBoxFor(m => m.HallName, new { @class = "form-control" })
                        <div class="form-group" hidden>
                            @Html.TextBoxFor(m => m.HallID, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <!-- Size Info -->
                <fieldset id="product-form-sizeinfo" name="product-form-sizeinfo">
                    <legend>@Resources.FormsResources.SizeInfo:</legend>
                    <div class="form-group">
                        <label class="col-lg-2 control-label">* @Resources.FormsResources.Depth:</label>
                        <div class="col-lg-4">
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.Depth, "{0:F2}", new { @class = "form-control form-number-input", required = "required", onchange = "calculateSizeByID()" })
                                <span class="input-group-addon">m</span>
                            </div>
                            @Html.ValidationMessageFor(m => m.Depth)
                        </div>
                        @if (Model.MaxDepth.HasValue) {
                            <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.MaxDepth):</label>
                            <div class="col-lg-4">
                                <p>@Html.DisplayFor(m => m.MaxDepth) m</p>
                            </div>
                        }
                    </div>
                    <div class="form-group">
                        <label class="col-lg-2 control-label">* @Resources.FormsResources.Width:</label>
                        <div class="col-lg-4">
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.Width, "{0:F2}", new { @class = "form-control form-number-input", required = "required", onchange = "calculateSizeByID()" })
                                <span class="input-group-addon">m</span>
                            </div>
                            @Html.ValidationMessageFor(m => m.Width)
                        </div>
                        @if (Model.MaxWidth.HasValue) {
                            <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.MaxWidth):</label>
                            <div class="col-lg-4">
                                <p>@Html.DisplayFor(m => m.MaxWidth) m</p>
                            </div>
                        }
                    </div>
                    <div class="form-group">
                        <label class="col-lg-2 control-label">* @Resources.FormsResources.Height:</label>
                        <div class="col-lg-4">
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.Height, "{0:F2}", new { @class = "form-control form-number-input", required = "required", onchange = "calculateSizeByID()" })
                                <span class="input-group-addon">m</span>
                            </div>
                        </div>
                        @if (Model.MaxHeight.HasValue) {
                            <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.MaxHeight):</label>
                            <div class="col-lg-4">
                                <p>@Html.DisplayFor(m => m.MaxHeight) m</p>
                            </div>
                        }
                    </div>
                    <div class="form-group">
                        <label class="col-lg-2 control-label">* @Resources.FormsResources.Size:</label>
                        <div class="col-lg-4">
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.Size, "{0:F2}", new { @class = "form-control form-number-input", disabled = "disabled", required = "required" })
                                <span class="input-group-addon">m3</span>
                            </div>
                            @Html.ValidationMessageFor(m => m.Size)
                        </div>
                        @if (Model.MaxSize.HasValue) {
                            <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.MaxSize):</label>
                            <div class="col-lg-4">
                                <p>@Html.DisplayFor(m => m.MaxSize) m3</p>
                            </div>
                        }
                    </div>
                    <br>
                    <div class="form-group">
                        <label class="col-lg-2 control-label">* @Html.DisplayNameFor(m => m.ShelfsNumber):</label>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(m => m.ShelfsNumber, new { @class = "form-control form-number-input", required = "required", onchange = "calculateShelfHeight()" })
                        </div>
                        <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.ShelfHeight):</label>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(m => m.ShelfHeight, "{0:F2}", new { @class = "form-control form-number-input", disabled = "disabled" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-2 control-label">* @Html.DisplayNameFor(m => m.DivitionsNumber):</label>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(m => m.DivitionsNumber, new { @class = "form-control form-number-input", required = "required", onchange = "calculateDivitionWidth()" })
                        </div>
                        <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.DivitionWidth):</label>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(m => m.DivitionWidth, "{0:F2}", new { @class = "form-control form-number-input", disabled = "disabled" })
                        </div>
                    </div>
                    <br>
                </fieldset>

                <!-- Capacity Info -->
                <fieldset id="product-form-sizeinfo" name="product-form-sizeinfo">
                    <legend>@Resources.FormsResources.CapacityInfo:</legend>
                    <div class="form-group">
                        <label class="col-lg-2 control-label">@Resources.FormsResources.Capacity:</label>
                        <div class="col-lg-4">
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.Size, "{0:F2}", new { @id = "Capacity", @class = "form-control form-number-input", disabled = "disabled" })
                                <span class="input-group-addon">m3</span>
                            </div>
                        </div>
                        <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.UsedSpace):</label>
                        <div class="col-lg-4">
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.UsedSpace, "{0:F2}", new { @class = "form-control form-number-input", disabled = "disabled" })
                                <span class="input-group-addon">m3</span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.UsedPercentage):</label>
                        <div class="col-lg-4">
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.UsedPercentage, "{0:F2}", new { @class = "form-control form-number-input", disabled = "disabled" })
                                <span class="input-group-addon">%</span>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <div class="form-group">
                    <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.Categories):</label>
                    <div class="col-lg-4">
                        @Html.TextBoxFor(m => m.Categories, new { @class = "select2-container select2-container-multi populate", style = "width:100%" })
                        @Html.ValidationMessageFor(m => m.Categories)
                    </div>
                    <p class="col-lg-3">@Resources.FormsResources.CategoriesInfo</p>
                </div>
                <div class="btn-toolbar">
                    <button type="submit" class="btn btn-success" id="Save" value="SubmitProduct">@Resources.FormsResources.Save</button>
                    @Html.ActionLink(@Resources.FormsResources.Cancel, "Index", "RacksABM", new { DepositID = Model.DepositID, SectorID = Model.SectorID, HallID = Model.HallID }, new { @class = "btn btn-default", @id = "Cancel" })
                    @if (@Model.RackID != null && @Model.RackID > 0) {
                        <button type="button" class="btn btn-danger" id="Delete" data-url="@Url.Action("Delete", "RacksForms", new { RackID = Model.RackID, SectorID = Model.SectorID, DepositID = Model.DepositID, HallID = Model.HallID })">@Resources.FormsResources.Delete</button>
                        @Html.ActionLink(@Html.Resource("EditDistributionCenter"), "FormEdit", "DistributionCenterForms", new { id = Model.DistributionCenter }, new { @id = "EditDistributionCenter", @class = "btn btn-default", @onclick = "sessionStorage.clear();" })
                        @Html.ActionLink(@Html.Resource("EditDeposit"), "FormEdit", "DepositsForms", new { DepositID = Model.DepositID }, new { @id = "EditSector", @class = "btn btn-default", @onclick = "sessionStorage.clear();" })
                        @Html.ActionLink(@Html.Resource("EditHall"), "FormEdit", "HallsForms", new { HallID = Model.HallID }, new { @id = "EditSector", @class = "btn btn-default", @onclick = "sessionStorage.clear();" })
                    }
                </div>
            </fieldset>
        </form>
    </div>
</body>
</html>
