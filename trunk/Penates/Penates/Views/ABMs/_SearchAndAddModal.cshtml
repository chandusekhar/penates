@model Penates.Models.ViewModels.SearchAndAddViewModelWithModal
@using Penates.Models.ViewModels.Forms
@using Penates.Models

@{
    ViewContext.FormContext = new FormContext();
}

<!doctype html>
<html>
<head>
    <title></title>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-extension.css" rel="stylesheet" />
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/Content/themes/base/jquery-ui-extension.css" rel="stylesheet" />
    <meta charset=utf-8 />
    <style>
        .ui-autocomplete {
            max-height: 300px;
            overflow-y: auto;
            /* prevent horizontal scrollbar */
            overflow-x: hidden;
        }
        /* IE 6 doesn't support max-height
        * we use height instead, but this forces the menu to always be this tall
        */
        * html .ui-autocomplete {
            height: 300px;
        }
    </style>
    <script>
        $(document).ready(function () {
            var refreshid = "#" + '@Model.TableUpdateFunctionName';
            $(refreshid).click(function (e) {
                window['@Model.TableUpdateFunctionName']();
            });
        });
    </script>
    <script type="text/javascript" title="Autocomplete">
    eval("var " + '@Model.concatWithId("paramID")');
    $(document).ready(function () {
        var autocompleteID = "#objectSearch" + '@Model.TableId';
        $(autocompleteID).autocomplete({
            source: function (request, response) {
                var p = @Html.Raw(Json.Encode(Model.Params));
                var params = {};
                if(p != null){
                    params = p;
                }
                try{
                    var globParam = globalParams.array;
                    if(globParam instanceof Array){
                        for (var p in globalParams.array) {
                            params[globParam[p].name] = globParam[p].value;
                        }
                    }else{
                        for (var p in globalParams.array) {
                            params[p] = globParam[p];
                        }
                    }
                }catch(e){

                }
                params["term"] = request.term;
                $.ajax({
                    url: '@Model.AjaxRequest',
                    data: params,
                    dataType: 'json',
                    type: 'GET',
                    delay: 500,
                    success: function (data) {
                        response($.map(data,function (item) {
                            return {
                                id: item.ID,
                                label: item.Label,
                                desc: item.Description
                            }
                        }));
                    },
                    error: function (xhr, textStatus, error) {
                        var er = xhr.status;
                        er = er + " - " + error;
                        er = er + ": \"" + xhr.responseText + "\"";
                        alert(er);
                    }
                })
            },
            select:function (event, ui) {
                $(autocompleteID).val(ui.item.label);
                    @Model.concatWithId("paramID") = ui.item.id;
                    return false;
            },
                minLength: 1
            }).data("ui-autocomplete")._renderItem = function (ul, item) {
                if (item.desc == null || item.desc == "") {
                    return $("<li>")
                    .append("<a>" + "<p>" + item.label + "</p>\n" + "</a>")
                    .appendTo(ul);
                } else {
                    return $("<li>")
                        .append("<a>" + "<p>" + item.label + "</p>" + "<p   style=\"font-size: 10px\">" + item.desc + "</p>\n" + "</a>")
                        .appendTo(ul);
                }
            };

        $(autocompleteID).bind("keyup.myPlugin", function (e) {
            var valor = $(autocompleteID).val();
            if (valor == null || valor == "") {
                @Model.concatWithId("paramID") = null;
            }
        });
    });
    </script>

    <script type="text/javascript" title="ModalAjaxCall">
        //Defino la funcion para el llamado al Modal
        eval("var " + '@Model.concatWithId("getModal")');
    @Model.concatWithId("getModal") = function(ur, params) {
        var p = "@Model.TableId";
        params["ViewID"] = p;
        $.ajax({
            url: ur,
            type: 'POST',
            data: params,
            beforeSend : function(){
                $("#@Model.concatWithId("modalProcessing")").modal("show");
            },
            error: function(obj, textStatus, errorThrown){
                if(obj.responseText.toLowerCase().indexOf("<!doctype html>")>=0){
                    $("body").html(obj.responseText);
                }else{
                    var err = obj.status;
                    err = err + ": " + obj.statusText;
                    err = err + ". " + obj.responseText;
                    $("#@Model.concatWithId("modalProcessing")").modal("hide");
                    alert(err);
                }
            }
        })
         .done(function (result) {
             $('@Model.getJqueryID("modalContent")').empty();
             $('@Model.getJqueryID("modalContent")').html(result);
             $('@Model.getJqueryID("modalProcessing")').modal("hide");
             $('@Model.getJqueryID("modal")').modal("show");
         });
    }
    </script>

    <script type="text/javascript" title="modal">
    $(document).ready(function(){
        $("#@Model.concatWithId("addObject")").click(function(){
            var param = @Html.Raw(Json.Encode(Model.Params));
            var addParams = @Model.concatWithId("paramID");
            var params = {};
            for (var attrname in param) { params[attrname] = param[attrname]; }
            for (var attrname in addParams) { params[attrname] = addParams[attrname]; }
            try{
                var globParam = globalParams.array;
                if(globParam instanceof Array){
                    for (var p in globalParams.array) {
                        params[globParam[p].name] = globParam[p].value;
                    }
                }else{
                    for (var p in globalParams.array) {
                        params[p] = globParam[p];
                    }
                }
            }catch(e){

            }
            window['@Model.concatWithId("getModal")']("@Model.ModalURL", params);
        });
    });
</script>
    <script type="text/javascript" title="SubmitComplete">
        if (typeof @Model.concatWithId("formSubmitSuccess") == 'undefined' || !$.isFunction(@Model.concatWithId("formSubmitSuccess"))) {
            eval("var " + '@Model.concatWithId("formSubmitSuccess")');
            @Model.concatWithId("formSubmitSuccess") = function(title, message) {
                var m = '<button type="button" class="close" data-dismiss="alert">×</button>\n';
                m = m + '<h4><strong>' + title + '</strong></h4>';
                m = m + '<p>' + message + '</p>';
                $('@Model.getJqueryID("addFormMessage")').html(m);
                $('@Model.getJqueryID("addFormMessage")').show();
                $('@Model.getJqueryID("modal")').modal("hide");
                window['@Model.TableUpdateFunctionName']();
            }
        }
    </script>
    <script type="text/javascript" title="FormEdit">
        if (typeof @Model.concatWithId("getEditForm") == 'undefined' || !$.isFunction(@Model.concatWithId("getEditForm"))) {
            eval("var " + '@Model.concatWithId("getEditForm")');
            @Model.concatWithId("getEditForm") = function(tableParams) {
                var param = @Html.Raw(Json.Encode(Model.Params));
                var params = {};
                for (var attrname in param) { params[attrname] = param[attrname]; }
                for (var attrname in tableParams) { params[attrname] = tableParams[attrname]; }
                try{
                    var globParam = globalParams.array;
                    if(globParam instanceof Array){
                        for (var p in globalParams.array) {
                            params[globParam[p].name] = globParam[p].value;
                        }
                    }else{
                        for (var p in globalParams.array) {
                            params[p] = globParam[p];
                        }
                    }
                }catch(e){

                }
                window['@Model.concatWithId("getModal")']("@Model.ModalURL", params);
            }
        }
    </script>
</head>
<body>

    <div id="@Model.concatWithId("modalDiv")">
        <!-- Modal -->
        <div class="modal fade" id="@Model.concatWithId("modal")" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div id="@Model.concatWithId("modalContent")" class="modal-content">

                </div>
            </div>
        </div>
    </div>
    <div id="@Model.concatWithId("modalProcessing")" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
                <div class="modal-body">
                    <img class="modal-loading" src="../../Content/images/PleaseWait.gif">
                </div>
        </div>
    </div>
    <div id="@Model.concatWithId("addFormError")" class="alert alert-dismissable alert-danger" hidden="hidden">
        <button type="button" class="close" data-dismiss="alert">×</button>
    </div>
    <div id="@Model.concatWithId("addFormMessage")" class="alert alert-dismissable alert-success" hidden="hidden">
        <button type="button" class="close" data-dismiss="alert">×</button>
    </div>
    <div class="row">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-horizontal">
                    <div id="@Model.concatWithId("divProcessing")" class="row text-center" hidden="hidden">
                        <p><img src="../../Content/images/ajax-loader.gif">@Resources.Resources.Processing</p>
                    </div>
                    <div class="row">
                        <div class="col-sm-2">
                            <button type="button" id="@Model.concatWithId("addObject")" class="btn btn-success btn-xs">
                                <span class="glyphicon glyphicon-floppy-save"></span>
                            </button>
                            <button id="@Model.TableUpdateFunctionName" type="button" class="btn btn-default btn-xs">
                                <span class="glyphicon glyphicon-refresh"></span>
                            </button>
                        </div>
                        <div class="col-sm-4">
                            <input type="text" id="@Model.concatWithId("objectSearch")" name="objectSearch" />
                        </div>
                        <div id="formResult" class="col-sm-6">

                        </div>
                        <div class="col-sm-4" hidden>
                            @Html.TextBoxFor(m => m.AddID, new { @id = @Model.concatWithId("AddID") })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @{Html.RenderPartial(@Model.TablePartialView, new TableAjaxViewModel(@Model.TableId) {
            AjaxRequest = @Model.TableAjaxRequest,
            DeleteAction = @Model.TableDeleteAction,
            DeleteController = @Model.TableDeleteController,
            DeleteText = @Model.TableDeleteText,
            DeleteConfirmMessage = @Model.TableDeleteConfirmMessage,
            ServerProcessing = @Model.TableServerProcessing,
            RefreshFunction = @Model.TableUpdateFunctionName,
            Params = Model.Params,
            useJQueryEditFunction = true,
            JQueryEditFunction = @Model.concatWithId("getEditForm")
        });}
    </div>
</body>

</html>