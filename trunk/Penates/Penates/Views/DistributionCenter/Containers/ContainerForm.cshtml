@model Penates.Models.ViewModels.DC.ContainerViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!doctype html>
<html>
<head>
    <title>@Html.Resource("Title")</title>
    <meta charset="utf-8">
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-background.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-extension.css" rel="stylesheet" />
    <link href="~/Content/css/select2.css" rel="stylesheet" />
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/Content/themes/base/jquery-ui-extension.css" rel="stylesheet" />
    <script src="~/Scripts/select2.min.js"></script>
    <script type="text/javascript" src="../../../Scripts/ABMs/calculateSizes.js"></script>
    <script src="~/Scripts/ABMs/calculateCapacity.js"></script>
    <script src="~/Scripts/Plugins/autocomplete.js"></script>
    <script src="~/Scripts/Plugins/globalParams.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#Delete').click(function () {
                if (confirm('@String.Format(Resources.Messages.SureToDelete, Resources.Resources.Container, Model.ContainerID)')) {
                    window.location.href = $(this).data('url');
                }
            });
        });
    </script>

    <script type="text/javascript" title="Initialize">
        var globalParams = new ParametrosGlobales;
    </script>

    <script type="text/javascript" title="Save Form Data">
        $(document).ready(function () {
            $(window).on('beforeunload', function () {
                sessionStorage.setItem('Code', $('#Code').val());
                sessionStorage.setItem('ContainerTypeID', $('#ContainerTypeID').val());
                sessionStorage.setItem('ContainerTypeName', $('#ContainerTypeName').val());
                sessionStorage.setItem('Depth', $('#Depth').val());
                sessionStorage.setItem('Width', $('#Width').val());
                sessionStorage.setItem('Height', $('#Height').val());
                sessionStorage.setItem('Size', $('#Size').val());
                sessionStorage.setItem('UsedPercentage', $('#UsedPercentage').val());
                sessionStorage.setItem('DistributionCenter', $('#DistributionCenter').val());
                sessionStorage.setItem('TemporaryDepositID', $('#TemporaryDepositID').val());
                sessionStorage.setItem('TemporaryDepositName', $('#TemporaryDepositName').val());
            });
        });
    </script>

    <script type="text/javascript" title="Load Form Data">
        $(document).ready(function () {
            var aux = sessionStorage.getItem('Code');
            if (aux != null && aux != ""){
                $('#Code').val(aux);
            }
            aux = sessionStorage.getItem('ContainerTypeID');
            var aux2 = sessionStorage.getItem('ContainerTypeName');
            if (aux != null && aux != "" && aux2 != null && aux2 != ""){
                $('#ContainerTypeID').val(aux);
                $('#ContainerTypeName').val(aux2);
            }
            aux = sessionStorage.getItem('TemporaryDepositID');
            var aux2 = sessionStorage.getItem('TemporaryDepositName');
            if (aux != null && aux != "" && aux2 != null && aux2 != ""){
                $('#TemporaryDepositID').val(aux);
                $('#TemporaryDepositName').val(aux2);
            }
            aux = sessionStorage.getItem('Depth');
            if (aux != null && aux != "") $('#Depth').val(aux);
            aux = sessionStorage.getItem('Width');
            if (aux != null && aux != "") $('#Width').val(aux);
            aux = sessionStorage.getItem('Height');
            if (aux != null && aux != "") $('#Height').val(aux);
            aux = sessionStorage.getItem('Size');
            if (aux != null && aux != ""){
                $('#Size').val(aux);
                $('#Capacity').val(aux);
            }
            aux = sessionStorage.getItem('UsedPercentage');
            if (aux != null && aux != "") $('#UsedPercentage').val(aux);
            aux = sessionStorage.getItem('DistributionCenter');
            if (aux != null && aux != "") $('#DistributionCenter').val(aux);
        });
    </script>

    <script type="text/javascript" title="Container Type Autocomplete">
    $(document).ready(function () {
        $("#ContainerTypeName").autocompletar({
            url: '@Url.Action("Autocomplete", "ContainerTypesABM")',
            params: globalParams.array,
            seleccion: function (event, ui) {
                $('#ContainerTypeName').val(ui.item.label);
                $('#ContainerTypeID').val(ui.item.id);
                sessionStorage.setItem("ContainerTypeID", ui.item.id);
                sessionStorage.setItem("ContainerTypeName", ui.item.label);
                if (ui.item.aux != undefined && ui.item.aux != null) {
                    if (ui.item.aux.Width != null && ui.item.aux.Width != "") {
                        $('#Width').val(ui.item.aux.Width);
                        sessionStorage.setItem("Width", ui.item.aux.Width);
                    }
                    if (ui.item.aux.Height != null && ui.item.aux.Height != "") {
                        $('#Height').val(ui.item.aux.Height);
                        sessionStorage.setItem("Height", ui.item.aux.Height);
                    }
                    if (ui.item.aux.Depth != null && ui.item.aux.Depth != "") {
                        $('#Depth').val(ui.item.aux.Depth);
                        sessionStorage.setItem("Depth", ui.item.aux.Depth);
                    }
                    var size = 0;
                    if(ui.item.aux.Width != undefined && ui.item.aux.Height != undefined && ui.item.aux.Depth != undefined){
                        size = ui.item.aux.Width * ui.item.aux.Height * ui.item.aux.Depth;
                    }
                    $('#Size').val(size);
                    $('#Capacity').val(size);
                    var usedSpace = @Html.Raw(Json.Encode(Model.UsedSpace));
                    if (size == 0 && usedSpace != undefined && usedSpace != null) {
                        $('#UsedPercentage').val(100);
                    } else {
                        $('#UsedPercentage').val((usedSpace / size)*100);
                    }
                }
                return false;
            },
            keyup: function (event, ui) {
                var valor = $("#ContainerTypeName").val();
                if (valor == null || valor == "") {
                    $("#ContainerTypeID").val("");
                    sessionStorage.setItem("ContainerTypeID", "");
                    sessionStorage.setItem("ContainerTypeName", "");
                    $('#Size').val("");
                    $('#Capacity').val("");
                    $('#Width').val("");
                    $('#Height').val("");
                    $('#Depth').val("");
                    $('#UsedPercentage').val('100');
                }
            }
        });
    });
    </script>

    @if (Model.ContainerID == null || Model.ContainerID == 0) {
        <script type="text/javascript" title="Autocomplete">
            $(document).ready(function () {
                $("#DistributionCenter").autocompletar({
                    url: '@Url.Action("DistributionCenterAutocomplete", "DepositsABM")',
                    seleccion: function (event, ui) {
                        $('#DistributionCenter').val(ui.item.id);
                        globalParams.addParam("DistributionCenterID", ui.item.id);
                        sessionStorage.setItem("DistributionCenter",ui.item.id);
                        $('#TemporaryDepositID').val("");
                        $('#TemporaryDepositName').val("");
                        sessionStorage.setItem("TemporaryDepositID", "");
                        sessionStorage.setItem("TemporaryDepositName", "");
                        return false;
                    },
                    keyup: function (event, ui) {
                        var valor = $("#DistributionCenter").val();
                        if (valor == null || valor == "") {
                            sessionStorage.setItem("DistributionCenter", "");
                            $("#TemporaryDepositID").val("");
                            $("#TemporaryDepositName").val("");
                            sessionStorage.setItem("TemporaryDepositID", "");
                            sessionStorage.setItem("TemporaryDepositName", "");
                            globalParams.deleteParam("DistributionCenterID");
                        }
                    }
                });
            });
        </script>

        <script type="text/javascript" title="Temporary Deposit Autocomplete">
            $(document).ready(function () {
                $("#TemporaryDepositName").autocompletar({
                    url: '@Url.Action("Autocomplete", "TemporaryDepositsABM")',
                    params: globalParams.array,
                    seleccion: function (event, ui) {
                        $('#TemporaryDepositName').val(ui.item.label);
                        $('#TemporaryDepositID').val(ui.item.id);
                        sessionStorage.setItem("TemporaryDepositID", ui.item.id);
                        sessionStorage.setItem("TemporaryDepositName", ui.item.label);
                        if (ui.item.aux != undefined && ui.item.aux != null) {
                            if (ui.item.aux.DistributionCenterID != null && ui.item.aux.DistributionCenterID != "") {
                                $('#DistributionCenter').val(ui.item.aux.DistributionCenterID);
                                sessionStorage.setItem("DistributionCenter", ui.item.aux.DistributionCenterID);
                                globalParams.addParam("DistributionCenterID", ui.item.aux.DistributionCenterID);
                            }
                        }
                        return false;
                    },
                    keyup: function (event, ui) {
                        var valor = $("#TemporaryDepositName").val();
                        if (valor == null || valor == "") {
                            $("#TemporaryDepositID").val("");
                            $("#TemporaryDepositName").val("");
                            sessionStorage.setItem("TemporaryDepositID", "");
                            sessionStorage.setItem("TemporaryDepositName", "");
                        }
                    }
                });
            });
        </script>
    }
</head>

<body>
    <div class="container">
        <h2>@Html.Resource("Title")</h2>
        <form class="form-horizontal" id="deposit-form" name="deposit-form" action="@Url.Action("Save", "ContainerForms")" autocomplete="on" method="post" enctype="multipart/form-data">
            @Html.ValidationMessageFor(m => m.error)
            @Html.AntiForgeryToken()
            <fieldset>
                <legend></legend>
                @if (@Model.ContainerID != null && @Model.ContainerID != 0)
                {
                    <div class="form-group">
                        <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.ContainerID):</label>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(m => m.ContainerID, new { disabled = "disabled", @class = "form-control" })
                            <div class="form-group" hidden>
                                @Html.TextBoxFor(m => m.ContainerID, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(m => m.ContainerID)
                        </div>
                    </div>
                }
                <div class="form-group">
                    <label class="col-lg-2 control-label">* @Html.DisplayNameFor(m => m.Code):</label>
                    <div class="col-lg-4">
                        @Html.TextBoxFor(m => m.Code, new { @class = "form-control", required = "required", autofocus = "autofocus" })
                        @Html.ValidationMessageFor(m => m.Code)
                    </div>
                    <label class="col-lg-2 control-label">* @Html.DisplayNameFor(m => m.ContainerTypeName):</label>
                    <div class="col-lg-4">
                        @Html.TextBoxFor(m => m.ContainerTypeName, new { @class = "form-control" })
                        <div class="form-group" hidden>
                            @Html.TextBoxFor(m => m.ContainerTypeID, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(m => m.ContainerID)
                        @Html.ValidationMessageFor(m => m.ContainerTypeName)
                    </div>
                </div>
                <!-- Size Info -->
                <fieldset id="product-form-sizeinfo" name="product-form-sizeinfo">
                    <legend>@Resources.FormsResources.SizeInfo:</legend>
                    <div class="form-group">
                        <label class="col-lg-1 control-label">@Resources.FormsResources.Depth:</label>
                        <div class="col-lg-3">
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.Depth, "{0:F2}", new { @class = "form-control form-number-input", disabled = "disabled", onchange = "calculateSizeByID()" })
                                <span class="input-group-addon">cm</span>
                            </div>
                            @Html.ValidationMessageFor(m => m.Depth)
                        </div>
                        <label class="col-lg-1 control-label">* @Resources.FormsResources.Width:</label>
                        <div class="col-lg-3">
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.Width, "{0:F2}", new { @class = "form-control form-number-input", disabled = "disabled", onchange = "calculateSizeByID()" })
                                <span class="input-group-addon">cm</span>
                            </div>
                            @Html.ValidationMessageFor(m => m.Width)
                        </div>
                        <label class="col-lg-1 control-label">* @Resources.FormsResources.Height:</label>
                        <div class="col-lg-3">
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.Height, "{0:F2}", new { @class = "form-control form-number-input", disabled = "disabled", onchange = "calculateSizeByID()" })
                                <span class="input-group-addon">cm</span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-2 col-lg-offset-3 control-label">* @Resources.FormsResources.Size:</label>
                        <div class="col-lg-4">
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.Size, "{0:F2}", new { @class = "form-control form-number-input", disabled = "disabled", required = "required" })
                                <span class="input-group-addon">cm3</span>
                            </div>
                            @Html.ValidationMessageFor(m => m.Size)
                        </div>
                    </div>
                    <br>
                </fieldset>
                <!-- Capacity Info -->
                <fieldset id="product-form-sizeinfo" name="product-form-sizeinfo">
                    <legend>@Resources.FormsResources.CapacityInfo:</legend>
                    <div class="form-group">
                        <label class="col-lg-2 control-label">@Resources.FormsResources.Capacity:</label>
                        <div class="col-lg-4">
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.Capacity, "{0:F2}", new { @id = "Capacity", @class = "form-control form-number-input", disabled = "disabled" })
                                <span class="input-group-addon">cm3</span>
                            </div>
                        </div>
                        <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.UsedSpace):</label>
                        <div class="col-lg-4">
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.UsedSpace, "{0:F2}", new { @class = "form-control form-number-input", disabled = "disabled" })
                                <span class="input-group-addon">cm3</span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.UsedPercentage):</label>
                        <div class="col-lg-4">
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.UsedPercentage, "{0:F2}", new { @class = "form-control form-number-input", disabled = "disabled" })
                                <span class="input-group-addon">%</span>
                            </div>
                        </div>
                    </div>
                    <br>
                </fieldset>
                <fieldset>
                    <legend>@Html.Resource("Location"):</legend>
                    @if (Model.ContainerID != null && Model.ContainerID != 0)
                    {
                        if (Model.TemporaryDepositID.HasValue) {
                            <div class="form-group">
                                <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.DistributionCenter):</label>
                                <div class="col-lg-4">
                                    @Html.TextBoxFor(m => m.DistributionCenter, new { disabled = "disabled", @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.TemporaryDepositID):</label>
                                <div class="col-lg-4">
                                    @Html.TextBoxFor(m => m.TemporaryDepositID, new { disabled = "disabled", @class = "form-control" })
                                </div>
                                <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.TemporaryDepositName):</label>
                                <div class="col-lg-4">
                                    @Html.TextBoxFor(m => m.TemporaryDepositName, new { disabled = "disabled", @class = "form-control" })
                                </div>
                            </div>
                        }else{
                            <div class="form-group">
                                <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.DistributionCenter):</label>
                                <div class="col-lg-4">
                                    @Html.TextBoxFor(m => m.DistributionCenter, new { disabled = "disabled", @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.DepositID):</label>
                                <div class="col-lg-4">
                                    @Html.TextBoxFor(m => m.DepositID, new { disabled = "disabled", @class = "form-control" })
                                </div>
                                <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.DepositName):</label>
                                <div class="col-lg-4">
                                    @Html.TextBoxFor(m => m.DepositName, new { disabled = "disabled", @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.SectorID):</label>
                                <div class="col-lg-4">
                                    @Html.TextBoxFor(m => m.SectorID, new { disabled = "disabled", @class = "form-control" })
                                </div>
                                <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.SectorName):</label>
                                <div class="col-lg-4">
                                    @Html.TextBoxFor(m => m.SectorName, new { disabled = "disabled", @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.HallID):</label>
                                <div class="col-lg-4">
                                    @Html.TextBoxFor(m => m.HallID, new { disabled = "disabled", @class = "form-control" })
                                </div>
                                <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.HallName):</label>
                                <div class="col-lg-4">
                                    @Html.TextBoxFor(m => m.HallName, new { disabled = "disabled", @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.RackID):</label>
                                <div class="col-lg-4">
                                    @Html.TextBoxFor(m => m.RackID, new { disabled = "disabled", @class = "form-control" })
                                </div>
                                <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.RackName):</label>
                                <div class="col-lg-4">
                                    @Html.TextBoxFor(m => m.RackName, new { disabled = "disabled", @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.IDShelfSubdivision):</label>
                                <div class="col-lg-4">
                                    @Html.TextBoxFor(m => m.IDShelfSubdivision, new { disabled = "disabled", @class = "form-control" })
                                </div>
                                <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.ShelfSubdivisionName):</label>
                                <div class="col-lg-4">
                                    @Html.TextBoxFor(m => m.ShelfSubdivisionName, new { disabled = "disabled", @class = "form-control" })
                                </div>
                            </div>
                        }
                    } else {
                        <div class="form-group">
                            <label class="col-lg-2 control-label">@Html.DisplayNameFor(m => m.DistributionCenter):</label>
                            <div class="col-lg-4">
                                @Html.TextBoxFor(m => m.DistributionCenter, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(m => m.DistributionCenter)
                        </div>
                        <div class="form-group">
                            <label class="col-lg-2 control-label">* @Html.DisplayNameFor(m => m.TemporaryDepositName):</label>
                            <div class="col-lg-4">
                                @Html.TextBoxFor(m => m.TemporaryDepositName, new { required = "required", @class = "form-control" })
                                <div class="form-group" hidden>
                                    @Html.TextBoxFor(m => m.TemporaryDepositID, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(m => m.TemporaryDepositID)
                                @Html.ValidationMessageFor(m => m.TemporaryDepositName)
                            </div>
                        </div>
                    }
                </fieldset>
                <div class="btn-toolbar">
                    <button type="submit" class="btn btn-success" id="Save" value="SubmitProduct">@Resources.FormsResources.Save</button>
                    @Html.ActionLink(@Resources.FormsResources.Cancel, "Index", "ContainersABM", new { RackID = Model.RackID, TemporaryDepositID = Model.TemporaryDepositID, ContainerTypeID = Model.ContainerTypeID }, new { @class = "btn btn-default", @id = "Cancel" })
                    @if (@Model.ContainerID != null && @Model.ContainerID > 0)
                    {
                        <button type="button" class="btn btn-danger" id="Delete" data-url="@Url.Action("Delete", "ContainerForms", new { ContainerID = Model.ContainerID})">@Resources.FormsResources.Delete</button>
                        @Html.ActionLink(@Html.Resource("ViewContainerTypes"), "Index", "ContainerTypesABM", null, new { @id = "ViewContainerTypes", @class = "btn btn-default", @onclick = "sessionStorage.clear();" })
                    }
                </div>
            </fieldset>
        </form>
    </div>
</body>
</html>
