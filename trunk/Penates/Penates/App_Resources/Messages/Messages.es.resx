<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActivatedItem" xml:space="preserve">
    <value>{0} con ID: {1} ha sido restaurado en el sistema</value>
  </data>
  <data name="ActivatedItems" xml:space="preserve">
    <value>{0} han sido satisfactoriamente activados</value>
  </data>
  <data name="CancelledItem" xml:space="preserve">
    <value>{0} ha sido satisfactoriamente cancelado</value>
  </data>
  <data name="DeactivatedItem" xml:space="preserve">
    <value>{0} con ID: {1} ha sido marcado como inactivo</value>
  </data>
  <data name="DeactivatedItems" xml:space="preserve">
    <value>{0} han sido satisfactoriamente desactivados</value>
  </data>
  <data name="DeactivatedUserNotification" xml:space="preserve">
    <value>El Usuario con Nombre de Usuario: {0} y Legajo: {1} ha sido desactivado automaticamente debido a inactividad.</value>
  </data>
  <data name="DeletedItem" xml:space="preserve">
    <value>{0} con ID: {1} ha sido satisfactioriamente eliminado</value>
  </data>
  <data name="EditNotFound" xml:space="preserve">
    <value>{0} no fue encontrado, agreguelo en su lugar</value>
  </data>
  <data name="EmptyContainerMoved" xml:space="preserve">
    <value>El Contenedor {0} ha sido movido al Deposito Temporal "{1}" (ID: {2}</value>
  </data>
  <data name="ItemNotFound" xml:space="preserve">
    <value>{0} con ID: {1} no ha sido encontrado. Cree uno nuevo llenando el formulario si desea</value>
  </data>
  <data name="JavascriptDeactivated" xml:space="preserve">
    <value>Debe activar Javascript en su navegador para poder visualizar esta página correctamente</value>
  </data>
  <data name="LoggingIn" xml:space="preserve">
    <value>Iniciando Sesión, por favor espere...</value>
  </data>
  <data name="OperationSuccessfull" xml:space="preserve">
    <value>La operación se ha realizado con exito</value>
  </data>
  <data name="PasswordChangeSuccessfull" xml:space="preserve">
    <value>La contraseña ha sido cambiada con exito</value>
  </data>
  <data name="PasswordsPolicyChange" xml:space="preserve">
    <value>Las politicas de la contraseña han cambiado y su contraseña no cumple con las nuevas politicas. Por favor, cambie su contraseña para ajustarse a las nuevas politicas.</value>
  </data>
  <data name="ReceptionActivity" xml:space="preserve">
    <value>La orden {0} ha sido recibida en {1}</value>
  </data>
  <data name="ReceptionNotification" xml:space="preserve">
    <value>La Orden numero {0} del proveedor {1} ha sido recibida.</value>
  </data>
  <data name="RestoredItem" xml:space="preserve">
    <value>{0} ha sido satisfactoriamente restaurado</value>
  </data>
  <data name="SaleActivity" xml:space="preserve">
    <value>{0} cajas se han vendido al cliente  {1}</value>
  </data>
  <data name="SaleAnnulated" xml:space="preserve">
    <value>La Venta ha sido anulada</value>
  </data>
  <data name="SaleApproved" xml:space="preserve">
    <value>La Venta ha sido restaurada</value>
  </data>
  <data name="SelectCity" xml:space="preserve">
    <value>Seleccione la Ciudad</value>
  </data>
  <data name="SelectCountry" xml:space="preserve">
    <value>Seleccione el Pais</value>
  </data>
  <data name="SelectState" xml:space="preserve">
    <value>Seleccione el Estado o Provincia</value>
  </data>
  <data name="ShowConstraintsOnPopup" xml:space="preserve">
    <value>Desea que Penates muestre las restricciones de borrado en un Popup?</value>
  </data>
  <data name="ShowErrorsOnPopup" xml:space="preserve">
    <value>Desea que Penates muestre los errores en un Popup?</value>
  </data>
  <data name="SuccessfullAdd" xml:space="preserve">
    <value>{0} fue agregado exitosamente</value>
  </data>
  <data name="SuccessfullAssign" xml:space="preserve">
    <value>{0} fue sasignado exitosamente</value>
  </data>
  <data name="SuccessfullUnassign" xml:space="preserve">
    <value>{0} fue desasignado exitosamente</value>
  </data>
  <data name="SureToActivate" xml:space="preserve">
    <value>Seguro que desea Activar {0}?</value>
  </data>
  <data name="SureToAdd" xml:space="preserve">
    <value>Seguro desea agregar {0}?</value>
  </data>
  <data name="SureToCancel" xml:space="preserve">
    <value>Seguro que desea Cancelar {0}?</value>
  </data>
  <data name="SureToDeactivate" xml:space="preserve">
    <value>Seguro que desea Desactivar {0}?</value>
  </data>
  <data name="SureToDelete" xml:space="preserve">
    <value>Seguro que desea eliminar {0}?</value>
  </data>
  <data name="SureToRestore" xml:space="preserve">
    <value>Seguro que desea Restaurar {0}?</value>
  </data>
  <data name="SureToUnassign" xml:space="preserve">
    <value>Seguro desea desasignar {0} de {1}?</value>
  </data>
  <data name="TransferActivity" xml:space="preserve">
    <value>{0} cajas recibidas en {1} provenientes de {2}</value>
  </data>
  <data name="UnsignedUser" xml:space="preserve">
    <value>Debera iniciar sesión para poder utilizar las funcionalidades del sistema</value>
  </data>
</root>