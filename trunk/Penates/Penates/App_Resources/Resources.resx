<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ProductWArt" xml:space="preserve">
    <value>The Product</value>
  </data>
  <data name="ItemsReturned" xml:space="preserve">
    <value>Total Items Found: </value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>Items</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="Suppliers" xml:space="preserve">
    <value>Suppliers</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="ID" xml:space="preserve">
    <value>Product ID</value>
  </data>
  <data name="SupplierWArt" xml:space="preserve">
    <value>The Supplier</value>
  </data>
  <data name="ClientWArt" xml:space="preserve">
    <value>The Client</value>
  </data>
  <data name="Processing" xml:space="preserve">
    <value>Processing, please wait...</value>
  </data>
  <data name="Supplier" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="CategoryWArt" xml:space="preserve">
    <value>The Category</value>
  </data>
  <data name="CategoryParent" xml:space="preserve">
    <value>Parent Category</value>
  </data>
  <data name="CategoryParentWArt" xml:space="preserve">
    <value>The Parent Category</value>
  </data>
  <data name="CategoryChild" xml:space="preserve">
    <value>Child Category</value>
  </data>
  <data name="CategoryChildWArt" xml:space="preserve">
    <value>The Child Category</value>
  </data>
  <data name="CommercialAgreements" xml:space="preserve">
    <value>Comercial Agreements</value>
  </data>
  <data name="Policies" xml:space="preserve">
    <value>Policies</value>
  </data>
  <data name="DistributionCenterWArt" xml:space="preserve">
    <value>The Distribution Center</value>
  </data>
  <data name="DistributionCenter" xml:space="preserve">
    <value>Distribution Center</value>
  </data>
  <data name="Boxes" xml:space="preserve">
    <value>Boxes</value>
  </data>
  <data name="Receptions" xml:space="preserve">
    <value>Receptions</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="Orders" xml:space="preserve">
    <value>Orders</value>
  </data>
  <data name="OrderWArt" xml:space="preserve">
    <value>The Order</value>
  </data>
  <data name="BoxesWArt" xml:space="preserve">
    <value>The Boxes</value>
  </data>
  <data name="DistributionCentersWArt" xml:space="preserve">
    <value>The Distribution Centers</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="UserWArt" xml:space="preserve">
    <value>The User</value>
  </data>
  <data name="UsernameWArt" xml:space="preserve">
    <value>The Username</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Rol</value>
  </data>
  <data name="RoleWArt" xml:space="preserve">
    <value>The Rol</value>
  </data>
  <data name="Notification" xml:space="preserve">
    <value>Notification</value>
  </data>
  <data name="NotificationWArt" xml:space="preserve">
    <value>The Notification</value>
  </data>
  <data name="Deposit" xml:space="preserve">
    <value>Deposit</value>
  </data>
  <data name="DepositWArt" xml:space="preserve">
    <value>The Deposit</value>
  </data>
  <data name="TemporaryDeposit" xml:space="preserve">
    <value>Temporary Deposit</value>
  </data>
  <data name="TemporaryDepositWArt" xml:space="preserve">
    <value>The Temporary Deposit</value>
  </data>
  <data name="Sector" xml:space="preserve">
    <value>Sector</value>
  </data>
  <data name="SectorWArt" xml:space="preserve">
    <value>The Sector</value>
  </data>
  <data name="Rack" xml:space="preserve">
    <value>Rack</value>
  </data>
  <data name="Racks" xml:space="preserve">
    <value>Racks</value>
  </data>
  <data name="RacksWArt" xml:space="preserve">
    <value>The Racks</value>
  </data>
  <data name="RackWArt" xml:space="preserve">
    <value>The Rack</value>
  </data>
  <data name="Hall" xml:space="preserve">
    <value>Hall</value>
  </data>
  <data name="HallWArt" xml:space="preserve">
    <value>The Hall</value>
  </data>
  <data name="Container" xml:space="preserve">
    <value>Container</value>
  </data>
  <data name="ContainerType" xml:space="preserve">
    <value>Container Type</value>
  </data>
  <data name="ContainerTypeWArt" xml:space="preserve">
    <value>The Container Type</value>
  </data>
  <data name="ContainerWArt" xml:space="preserve">
    <value>The Container</value>
  </data>
  <data name="ProductsWArt" xml:space="preserve">
    <value>The Products</value>
  </data>
  <data name="ItemState" xml:space="preserve">
    <value>Item's State</value>
  </data>
  <data name="Pack" xml:space="preserve">
    <value>Pack</value>
  </data>
  <data name="PackWArt" xml:space="preserve">
    <value>The Pack</value>
  </data>
  <data name="ItemStateWArt" xml:space="preserve">
    <value>The Item's State</value>
  </data>
  <data name="Containers" xml:space="preserve">
    <value>Containers</value>
  </data>
  <data name="Divition" xml:space="preserve">
    <value>Divition</value>
  </data>
  <data name="DivitionWArt" xml:space="preserve">
    <value>The Divition</value>
  </data>
  <data name="Box" xml:space="preserve">
    <value>Box</value>
  </data>
  <data name="BoxWArt" xml:space="preserve">
    <value>The Box</value>
  </data>
  <data name="Sale" xml:space="preserve">
    <value>Sale</value>
  </data>
  <data name="SaleWArt" xml:space="preserve">
    <value>The Sale</value>
  </data>
  <data name="InventoryWArt" xml:space="preserve">
    <value>The Inventory</value>
  </data>
  <data name="UsersWArt" xml:space="preserve">
    <value>The Users</value>
  </data>
  <data name="RuleWArt" xml:space="preserve">
    <value>The Rule</value>
  </data>
</root>